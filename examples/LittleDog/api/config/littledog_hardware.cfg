######################################################################
#
# Boston Dynamics LittleDog runtime parameter configuration file
#
#                    !! DO NOT EDIT THIS FILE !!
#
# This file is for reserved for usage by Boston Dynamics. Custom
# changes will be lost on future updates. User parameters should
# be placed in a user created and called from bdi_rt.cfg.
#
# Comments
#
#  - All units/angles are metric/radians
#
######################################################################

# structure for names
struct description
	robot_species		= littledog
	robot_individual	= littledog
	robot_config_label	= littledog

struct hw
	encoder_cutoff  = 50

struct multiloop
	struct server_supervisor
		use_shared_memory = 1

struct adc_map
	struct channel_0 # force 0
		hw_object = littledog.hl.force_z.hw
		filter_object = littledog.hl.force_z.filter
	struct channel_1 # adc 4
		hw_object = littledog.hl.force_x.hw
		filter_object = littledog.hl.force_x.filter
	struct channel_2 # force 1
		hw_object = littledog.fl.force_z.hw
		filter_object = littledog.fl.force_z.filter
	struct channel_3 # adc 5
		hw_object = littledog.fl.force_x.hw
		filter_object = littledog.fl.force_x.filter
	struct channel_4 # force 2
		hw_object = littledog.fr.force_z.hw
		filter_object = littledog.fr.force_z.filter
	struct channel_5 # adc 6
		hw_object = littledog.fr.force_x.hw
		filter_object = littledog.fr.force_x.filter
	struct channel_6 # force 3
		hw_object = littledog.hr.force_z.hw
		filter_object = littledog.hr.force_z.filter
	struct channel_7 # adc 7
		hw_object = littledog.hr.force_x.hw
		filter_object = littledog.hr.force_x.filter
	struct channel_8 # touchdown 0
		hw_object = littledog.hl.force_y.hw
		filter_object = littledog.hl.force_y.filter
	struct channel_9 # touchdown 1
		hw_object = littledog.fl.force_y.hw
		filter_object = littledog.fl.force_y.filter
	struct channel_10 # touchdown 2
		hw_object = littledog.fr.force_y.hw
		filter_object = littledog.fr.force_y.filter
	struct channel_11 # touchdown 3
		hw_object = littledog.hr.force_y.hw
		filter_object = littledog.hr.force_y.filter
	struct channel_12 # proximity 0
		hw_object = NONE
		filter_object = NONE
		slope = 9.1553e-4
	struct channel_13 # proximity 1
		hw_object = littledog.temperature
		filter_object = NONE
	struct channel_14 # battery voltage
		hw_object = littledog.battery_voltage.hw
		filter_object = littledog.battery_voltage.filter
	struct channel_15 # battery current
		hw_object = littledog.battery_current
		filter_object = NONE

struct encoder_map
	struct channel_0
		hw_object = littledog.hl.knee_ry.enc
		filter_object = littledog.hl.knee_ry.filtered_encoder
	struct channel_1
		hw_object = littledog.hr.knee_ry.enc
		filter_object = littledog.hr.knee_ry.filtered_encoder
	struct channel_2
		hw_object = littledog.hr.diff_encoder_hipr
		filter_object = littledog.hr.filt_encoder_hipr
	struct channel_3
		hw_object = littledog.hl.diff_encoder_hipr
		filter_object = littledog.hl.filt_encoder_hipr
	struct channel_4
		hw_object = littledog.hr.diff_encoder_hipf
		filter_object = littledog.hr.filt_encoder_hipf
	struct channel_5
		hw_object = littledog.hl.diff_encoder_hipf
		filter_object = littledog.hl.filt_encoder_hipf
	struct channel_6
		hw_object = littledog.fr.diff_encoder_hipr
		filter_object = littledog.fr.filt_encoder_hipr
	struct channel_7
		hw_object = littledog.fl.diff_encoder_hipr
		filter_object = littledog.fl.filt_encoder_hipr
	struct channel_8
		hw_object = littledog.fr.diff_encoder_hipf
		filter_object = littledog.fr.filt_encoder_hipf
	struct channel_9
		hw_object = littledog.fl.diff_encoder_hipf
		filter_object = littledog.fl.filt_encoder_hipf
	struct channel_10
		hw_object = littledog.fl.knee_ry.enc
		filter_object = littledog.fl.knee_ry.filtered_encoder
	struct channel_11
		hw_object = littledog.fr.knee_ry.enc
		filter_object = littledog.fr.knee_ry.filtered_encoder

struct motor_map
	struct channel_0
		hw_object = littledog.hl.knee_ry.pwm
	struct channel_1
		hw_object = littledog.hr.knee_ry.pwm
	struct channel_2
		hw_object = littledog.hr.diff_motor_hipr
	struct channel_3
		hw_object = littledog.hl.diff_motor_hipr
	struct channel_4
		hw_object = littledog.hr.diff_motor_hipf
	struct channel_5
		hw_object = littledog.hl.diff_motor_hipf
	struct channel_6
		hw_object = littledog.fr.diff_motor_hipr
	struct channel_7
		hw_object = littledog.fl.diff_motor_hipr
	struct channel_8
		hw_object = littledog.fr.diff_motor_hipf
	struct channel_9
		hw_object = littledog.fl.diff_motor_hipf
	struct channel_10
		hw_object = littledog.fl.knee_ry.pwm
	struct channel_11
		hw_object = littledog.fr.knee_ry.pwm

struct littledog
	joint_count	= 12
	chain_count	= 4
	struct proximity
		channel         = 0           #
		type            = 5           # PROXIMITY
		volts_slope     = 9.1553e-4   # V/count (1.5*2.5/4096)
		volts_min       = 0.2         # min volts for reading valid values
		inv_slope       = 0.1333      # volt meters (0.01/0.075); 0.01 is centimeters->meters, 0.075 is from datasheet; we multiply this by 1/V
		zero            = 0.0042      # meters, subtracted from final product

	struct battery_voltage
		struct hw
			enable          = 1           # true
			type            = 8           # voltage
			channel         = 0           # unused 
			slope           = 0.00567     # counts/V
			zero            = 0.0	      #
			min             = 12.6        # undervoltage fault
			max             = 20          # overvoltage fault
		struct filter
			input		= littledog.battery_voltage.hw
			cutoff          = 4.0818
			type            = 1

	struct battery_current
		enable          = 1           # true
		type            = 14          # current
		channel         = 0           # unused
		slope           = 0.005349    # counts/A
		zero            = 0.0         # 
		min             = 0           # min current
		max             = 10          # max current

	struct temperature
		enable          = 1
		type            = 5
		channel         = 1           # Input 1
		slope           = 0.091       # degC/count
		zero            = 0.0        
		min             = 0.0         # degC
		max             = 85.0        # degC

	struct fl

		struct differential 
			motor_A_ratio       = 0.4        # unitless -(14/35) . A is front input on littledog
			motor_B_ratio       = 0.4        # unitless -(14/35) . B is rear
			gearbox_input_teeth = 32         # gear teeth inside differential
			spider_teeth        = 32         # no reduction
			frame_to_X_sign     = 1          # aligned with body X axis			
			spider_to_Y_sign    = 1          # aligned with body Y axis

		struct diff_encoder_hipr
			enable              =  1
			channel_path	    = 0 0 7
			slope               =  3.6523e-5 # rads/counts  (2*pi/(2048*84))
			zero                =  0         # rads
			max_counts          =  1048575   # counts

		struct filt_encoder_hipr
			#input	            = littledog.fl.diff_encoder_hipr
			#type                = 2           # 2-pole LPF
			cutoff              = 50          # Hz
			enable              =  1
			channel_path	    = 0 0 7
			slope               =  3.6523e-5 # rads/counts  (2*pi/(2048*84))
			zero                =  0         # rads
			max_counts          =  1048575   # counts

		struct diff_motor_hipr
			channel             = 7          # unsigned 
			type                = 0
			enable              = 1          # bool
			null_bias           = 0          # Amp
			inv_torque_const    = 1.4679     # Amp/Nm (includes gearbox 1:84)
			back_emf_const      = 0.088      # Vs/rad
			armature_resistance = 3.38       # Ohms
			max_current         = 1.000      # Amp

		struct diff_encoder_hipf
			channel_path	    = 0 0 9
			enable              = 1
			slope               = 3.6523e-5  # rads/counts  (2*pi/(2048*84))
			zero                = 0          # rads
			max_counts          =  1048575   # counts

		struct filt_encoder_hipf
			#input	            = littledog.fl.diff_encoder_hipf
			#type                = 2           # 2-pole LPF
			cutoff              = 50          # Hz
			channel_path	    = 0 0 9
			enable              = 1
			slope               = 3.6523e-5  # rads/counts  (2*pi/(2048*84))
			zero                = 0          # rads
			max_counts          =  1048575   # counts

		struct diff_motor_hipf                   # QUANTITIES MUST BE IN MOTOR COORDS
			channel             = 9          # unsigned 
			type                = 0
			enable              = 1          # bool
			null_bias           = 0          # Amp
			inv_torque_const    = 1.4679     # Amp/Nm
			back_emf_const      = 0.088       # Vs/rad
			armature_resistance = 3.38       # Ohms
			max_current         = 1.000      # Amp

		struct hip_rx
			pos_input_name	= littledog.fl.hip_rx.enc
		
			struct pd
				k                   = 0.005       # Nm/rad
				b                   = 0           # Nm/(rad/s)
				flags               = 0		  # unfiltered, no bounds check

			struct enc # virtual
				min                 = -0.6        # rads
				max                 =  0.6        # rads

			struct virtual_pwm 

		struct hip_ry
			pos_input_name	= littledog.fl.hip_ry.enc
		
			struct pd
				k                   = 0.005       # Nm/rad
				b                   = 0           # Nm/(rad/s)
				flags               = 0		  # unfiltered, no bounds check

			struct enc # virtual
				min                 = -3.5        # rads
				max                 =  2.4        # rads

			struct virtual_pwm 

		struct knee_ry
			pos_input_name	= littledog.fl.knee_ry.filtered_encoder
		
			struct pd
				k                   = 0.005       # Nm/rad
				b                   = 0           # Nm/(rad/s)
				flags               = 0		  # unfiltered, no bounds check

			struct enc
				channel_path	    = 0 0 10
				enable              =  1
				slope               =  2.434e-5   # rads/counts  2*pi/(2048*84*1.5)
				zero                =  0          # rads
				min                 = -3.1        # rads
				max                 =  1.0        # rads
				max_counts          =  1048575    # counts

			struct filtered_encoder
				#input	            = littledog.fl.knee_ry.enc
				#type                = 2           # 2-pole LPF
				channel_path	    = 0 0 10
				enable              =  1
				slope               =  2.434e-5   # rads/counts  2*pi/(2048*84*1.5)
				zero                =  0          # rads
				min                 = -3.1        # rads
				max                 =  1.0        # rads
				max_counts          =  1048575    # counts
				cutoff              = 50          # Hz

			struct pwm                            # QUANTITIES MUST BE IN MOTOR COORDS
				channel             = 10          # unsigned 
				type                = 0
				enable              = 1           # bool
				null_bias           = 0           # Amp
				inv_torque_const    = 0.9786      # Amp/Nm
				back_emf_const      = 0.15        # Vs/rad
				armature_resistance = 3.38        # Ohms
				max_current         = 1.000       # Amp

		struct force_x
			struct hw
				type                =  6         #
				enable              =  1         #
				channel             =  5         #
				slope               =  0.01457   # N/counts
				zero                =  2298      # counts
				min                 = -1000.0    # N
				max                 =  1000.0    # N
			struct filter
				input	            = littledog.fl.force_x.hw
				type                = 2          # 2 pole LPF
				cutoff              = 50         # Hz

		struct force_y
			struct hw
				type                =  3         #
				enable              =  1         #
				channel             =  1         #
				slope               =  0.01457   # N/counts
				zero                =  2275      # counts
				min                 = -1000.0    # N
				max                 =  1000.0    # N
			struct filter
				input	            = littledog.fl.force_y.hw
				type                = 2          # 2 pole LPF
				cutoff              = 50         # Hz

		struct force_z
			struct hw
				type                =  2         #
				enable              =  1         #
				channel             =  1         #
				slope               =  -0.006    # N/counts
				zero                =  4142      # counts
				min                 = -1000.0    # N
				max                 =  1000.0    # N
			struct filter
				input	            = littledog.fl.force_z.hw
				type                = 2          # 2 pole LPF
				cutoff              = 50         # Hz

	struct fr

		struct differential 
			motor_A_ratio       = 0.4       # unitless -(14/35) . A is front input on littledog
			motor_B_ratio       = 0.4       # unitless -(14/35) . B is rear
			gearbox_input_teeth = 32         # gear teeth
			spider_teeth        = 32         # no reduction
			frame_to_X_sign     = 1          # aligned with body X axis
			spider_to_Y_sign    = -1          # opposite body Y axis

		struct diff_encoder_hipr
			channel_path	    = 0 0 6
			enable              = 1
			slope               = 3.6523e-5  # rads/counts  (2*pi/(2048*84))
			zero                = 0          # rads
			max_counts          =  1048575   # counts

		struct filt_encoder_hipr
			#input	            = littledog.fr.diff_encoder_hipr
			#type                = 2           # 2-pole LPF
			cutoff              = 50          # Hz
			channel_path	    = 0 0 6
			enable              = 1
			slope               = 3.6523e-5  # rads/counts  (2*pi/(2048*84))
			zero                = 0          # rads
			max_counts          =  1048575   # counts

		struct diff_motor_hipr                   # QUANTITIES MUST BE IN MOTOR COORDS
			enable              = 1          # bool
			type                = 0
			channel             = 6          # unsigned 
			null_bias           = 0          # Amp
			inv_torque_const    = 1.4679     # Amp/Nm
			back_emf_const      = 0.088      # Vs/rad
			armature_resistance = 3.38       # Ohms
			max_current         = 1.000      # Amp

		struct diff_encoder_hipf
			channel_path	    = 0 0 8
			enable              = 1
			slope               = 3.6523e-5  # rads/counts  (2*pi/(2048*84))
			zero                = 0          # rads
 			max_counts          =  1048575   # counts

		struct filt_encoder_hipf
			#input	            = littledog.fr.diff_encoder_hipf
			#type                = 2           # 2-pole LPF
			cutoff              = 50          # Hz
			channel_path	    = 0 0 8
			enable              = 1
			slope               = 3.6523e-5  # rads/counts  (2*pi/(2048*84))
			zero                = 0          # rads
 			max_counts          =  1048575   # counts

		struct diff_motor_hipf                   # QUANTITIES MUST BE IN MOTOR COORDS
			enable              = 1          # bool
			channel             = 8          # unsigned 
			type                = 0
			null_bias           = 0          # Amp
			inv_torque_const    = 1.4679     # Amp/Nm
			back_emf_const      = 0.088      # Vs/rad
			armature_resistance = 3.38       # Ohms
			max_current         = 1.000      # Amp

		struct hip_rx
			pos_input_name	= littledog.fr.hip_rx.enc
		
			struct pd
				k                   = 0.005       # Nm/rad
				b                   = 0           # Nm/(rad/s)
				flags               = 0		  # unfiltered, no bounds check

			struct enc # virtual
				min                 = -0.6        # rads
				max                 =  0.6        # rads

			struct virtual_pwm 

		struct hip_ry
			pos_input_name	= littledog.fr.hip_ry.enc
		
			struct pd
				k                   = 0.005       # Nm/rad
				b                   = 0           # Nm/(rad/s)
				flags               = 0		  # unfiltered, no bounds check

			struct enc # virtual
				min                 = -3.5        # rads
				max                 =  2.4        # rads

			struct virtual_pwm 

		struct knee_ry
			pos_input_name	= littledog.fr.knee_ry.filtered_encoder
		
			struct pd
				k                   = 0.005       # Nm/rad
				b                   = 0           # Nm/(rad/s)
				flags               = 0		  # unfiltered, no bounds check

			struct enc
				channel_path	    = 0 0 11
				enable              = 1
				slope               = -2.434e-5   # rads/counts  (2*pi/(2048*84*1.5)
				zero                = 0           # rads
				min                 = -3.1        # rads
				max                 = 1.0         # rads
				max_counts          =  1048575    # counts

			struct filtered_encoder
				#input	            = littledog.fr.knee_ry.enc
				#type                = 0           # 2-pole LPF
				cutoff              = 50          # Hz
				channel_path	    = 0 0 11
				enable              = 1
				slope               = -2.434e-5   # rads/counts  (2*pi/(2048*84*1.5)
				zero                = 0           # rads
				min                 = -3.1        # rads
				max                 = 1.0         # rads
				max_counts          =  1048575    # counts

			struct pwm                     	          # QUANTITIES MUST BE IN MOTOR COORDS
				enable              = 1           # bool
				channel             = 11          # unsigned 
				type                = 0
				null_bias           = 0           # Amp
				inv_torque_const    = -0.9786     # Amp/Nm
				back_emf_const      = -0.15       # Vs/rad
				armature_resistance = 3.38        # Ohms
				max_current         = 1.000       # Amp

		struct force_x
			struct hw
				type                =  6              #
				enable              =  1              #
				channel             =  6              #
				slope               =  0.01457        # N/count
				zero                =  2298           # counts
				min                 = -1000.0         # N
				max                 =  1000.0         # N
			struct filter
				input	            = littledog.fr.force_x.hw
				type                = 2          # 2 pole LPF
				cutoff              = 50         # Hz

		struct force_y
			struct hw
				type                =  3              #
				enable              =  1              #
				channel             =  2              #
				slope               =  0.01457        # N/count
				zero                =  2275           # counts
				min                 = -1000.0         # N
				max                 =  1000.0         # N
			struct filter
				input	            = littledog.fr.force_y.hw
				type                = 2          # 2 pole LPF
				cutoff              = 50         # Hz

		struct force_z
			struct hw
				type                =  2              #
				enable              =  1              #
				channel             =  2              #
				slope               =  -0.006         # N/count
				zero                =  4142           # counts
				min                 = -1000.0         # N
				max                 =  1000.0         # N
			struct filter
				input	            = littledog.fr.force_z.hw
				type                = 2          # 2 pole LPF
				cutoff              = 50         # Hz

	struct hl

		struct differential 
			motor_A_ratio       = -0.4        # unitless (14/35) . A is front input on littledog
			motor_B_ratio       = -0.4        # unitless (14/35) . B is rear
			gearbox_input_teeth = 32         # gear teeth
			spider_teeth        = 32         # no reduction
			frame_to_X_sign     = 1          # aligned with body X axis			
			spider_to_Y_sign    = 1          # aligned with body Y axis

		struct diff_encoder_hipr
			channel_path	    = 0 0 3
			enable              = 1
			slope               = 3.6523e-5   # rads/counts  (2*pi/(2048*84))
			zero                = 0           # rads
			max_counts          =  1048575    # counts

		struct filt_encoder_hipr
			#input	            = littledog.hl.diff_encoder_hipr
			#type                = 2           # 2-pole LPF
			cutoff              = 50          # Hz
			channel_path	    = 0 0 3
			enable              = 1
			slope               = 3.6523e-5   # rads/counts  (2*pi/(2048*84))
			zero                = 0           # rads
			max_counts          =  1048575    # counts

		struct diff_motor_hipr                    # QUANTITIES MUST BE IN MOTOR COORDS
			enable              = 1           # bool
			channel             = 3           # unsigned 
			type                = 0
			null_bias           = 0           # Amp
			inv_torque_const    = 1.4679      # Amp/Nm
			back_emf_const      = 0.088       # Vs/rad
			armature_resistance = 3.38        # Ohms
			max_current         = 1.000       # Amp

		struct diff_encoder_hipf
			channel_path	    = 0 0 5
			enable              = 1
			slope               = 3.6523e-5   # rads/counts  (2*pi/(2048*84))
			zero                = 0           # rads
			max_counts          =  1048575    # counts

		struct filt_encoder_hipf
			#input	            = littledog.hl.diff_encoder_hipf
			#type                = 2           # 2-pole LPF
			cutoff              = 50          # Hz
			channel_path	    = 0 0 5
			enable              = 1
			slope               = 3.6523e-5   # rads/counts  (2*pi/(2048*84))
			zero                = 0           # rads
			max_counts          =  1048575    # counts

		struct diff_motor_hipf                    # QUANTITIES MUST BE IN MOTOR COORDS
			enable              = 1           # bool
			channel             = 5           # unsigned 
			type                = 0
			null_bias           = 0           # Amp
			inv_torque_const    = 1.4679      # Amp/Nm
			back_emf_const      = 0.088       # Vs/rad
			armature_resistance = 3.38        # Ohms
			max_current         = 1.000       # Amp

		struct hip_rx
			pos_input_name	= littledog.hl.hip_rx.enc
		
			struct pd
				k                   = 0.005       # Nm/rad
				b                   = 0           # Nm/(rad/s)
				flags               = 0		  # unfiltered, no bounds check

			struct enc # virtual
				min                 = -0.6        # rads
				max                 =  0.6        # rads

			struct virtual_pwm 

		struct hip_ry
			pos_input_name	= littledog.hl.hip_ry.enc
		
			struct pd
				k                   = 0.005       # Nm/rad
				b                   = 0           # Nm/(rad/s)
				flags               = 0		  # unfiltered, no bounds check

			struct enc # virtual
				min                 = -2.4        # rads
				max                 =  3.5        # rads

			struct virtual_pwm 

		struct knee_ry
			pos_input_name	= littledog.hl.knee_ry.filtered_encoder
		
			struct pd
				k                   = 0.005       # Nm/rad
				b                   = 0           # Nm/(rad/s)
				flags               = 0		  # unfiltered, no bounds check

			struct enc
				channel_path	    =  0 0 0
				enable              =  1
				slope               =  2.434e-5   # rads/counts  (2*pi/(2048*84*1.5)
				zero                =  0          # rads
				min                 = -1.0        # rads
				max                 =  3.1        # rads
				max_counts          =  1048575    # counts

			struct pwm                            # QUANTITIES MUST BE IN MOTOR COORDS
				enable              = 1           # bool
				channel             = 0           # unsigned 
				type                = 0
				null_bias           = 0           # Amp
				inv_torque_const    = 0.9786      # Amp/Nm
				back_emf_const      = 0.15        # Vs/rad
				armature_resistance = 3.38        # Ohms
				max_current         = 1.000       # Amp

			struct filtered_encoder
				#input	            = littledog.hl.knee_ry.enc
				#type                = 0           # 2-pole LPF
				cutoff              = 50          # Hz
				channel_path	    =  0 0 0
				enable              =  1
				slope               =  2.434e-5   # rads/counts  (2*pi/(2048*84*1.5)
				zero                =  0          # rads
				min                 = -1.0        # rads
				max                 =  3.1        # rads
				max_counts          =  1048575    # counts

		struct force_x
			struct hw
				type                =  6              #
				enable              =  1              #
				channel             =  4              #
				slope               =  -0.01457       # N/count
				zero                =  2298           # counts
				min                 = -1000.0         # N
				max                 =  1000.0         # N
			struct filter
				input	            = littledog.hl.force_x.hw
				type                = 2          # 2 pole LPF
				cutoff              = 50         # Hz

		struct force_y
			struct hw
				type                =  3              #
				enable              =  1              #
				channel             =  0              #
				slope               =  -0.01457       # N/count
				zero                =  2275           # counts
				min                 = -1000.0         # N
				max                 =  1000.0         # N
			struct filter
				input	            = littledog.hl.force_y.hw
				type                = 2          # 2 pole LPF
				cutoff              = 50         # Hz

		struct force_z
			struct hw
				type                =  2              #
				enable              =  1              #
				channel             =  0              #
				slope               =  -0.006         # N/count
				zero                =  4142           # counts
				min                 = -1000.0         # N
				max                 =  1000.0         # N
			struct filter
				input	            = littledog.hl.force_z.hw
				type                = 2          # 2 pole LPF
				cutoff              = 50         # Hz

	struct hr

		struct differential 
			motor_A_ratio       = -0.4        # unitless (14/35) . A is front input on littledog
			motor_B_ratio       = -0.4        # unitless (14/35) . B is rear
			gearbox_input_teeth = 32         # gear teeth
			spider_teeth        = 32         # no reduction
			frame_to_X_sign     = 1          # aligned with body X axis			
			spider_to_Y_sign    = -1         # opposite body Y axis

		struct diff_encoder_hipr
			channel_path	    = 0 0 2
			enable              = 1
			slope               = 3.6523e-5  # rads/counts  (2*pi/(2048*84))
			zero                = 0           # counts
			max_counts          = 1048575     # counts

		struct filt_encoder_hipr
			#input	            = littledog.hr.diff_encoder_hipr
			#type                = 2           # 2-pole LPF
			cutoff              = 50          # Hz
			channel_path	    = 0 0 2
			enable              = 1
			slope               = 3.6523e-5  # rads/counts  (2*pi/(2048*84))
			zero                = 0           # counts
			max_counts          = 1048575     # counts

		struct diff_motor_hipr                    # QUANTITIES MUST BE IN MOTOR COORDS
			enable              = 1           # bool
			channel             = 2           # unsigned 
			type                = 0
			null_bias           = 0           # Amp
			inv_torque_const    = 1.4679      # Amp/Nm
			back_emf_const      = 0.088       # Vs/rad
			armature_resistance = 3.38        # Ohms
			max_current         = 1.000       # Amp

		struct diff_encoder_hipf
			channel_path	    = 0 0 4
			enable              =  1
			slope               =  3.6523e-5  # rads/counts  (2*pi/(2048*84))
			zero                =  0          # rads
			max_counts          =  1048575    # counts

		struct filt_encoder_hipf
			#input	            = littledog.hr.diff_encoder_hipf
			#type                = 2           # 2-pole LPF
			cutoff              = 50          # Hz
			channel_path	    = 0 0 4
			enable              =  1
			slope               =  3.6523e-5  # rads/counts  (2*pi/(2048*84))
			zero                =  0          # rads
			max_counts          =  1048575    # counts

		struct diff_motor_hipf                    # QUANTITIES MUST BE IN MOTOR COORDS
			enable              = 1           # bool
			channel             = 4           # unsigned 
			type                = 0
			null_bias           = 0           # Amp
			inv_torque_const    = 1.4679      # Amp/Nm
			back_emf_const      = 0.088       # Vs/rad
			armature_resistance = 3.38        # Ohms
			max_current         = 1.000       # Amp

		struct hip_rx
			pos_input_name	= littledog.hr.hip_rx.enc
		
			struct pd
				k                   = 0.005       # Nm/rad
				b                   = 0           # Nm/(rad/s)
				flags               = 0		  # unfiltered, no bounds check

			struct enc # virtual
				min                 = -0.6        # rads
				max                 =  0.6        # rads

			struct virtual_pwm 

		struct hip_ry
			pos_input_name	= littledog.hr.hip_ry.enc
		
			struct pd
				k                   = 0.005       # Nm/rad
				b                   = 0           # Nm/(rad/s)
				flags               = 0		  # unfiltered, no bounds check

			struct enc # virtual
				min                 = -2.4        # rads
				max                 =  3.5        # rads

			struct virtual_pwm 

		struct knee_ry
			pos_input_name	= littledog.hr.knee_ry.filtered_encoder
		
			struct pd
				k                   = 0.005       # Nm/rad
				b                   = 0           # Nm/(rad/s)
				flags               = 0		  # unfiltered, no bounds check

			struct enc
				channel_path	    = 0 0 1
				enable              =  1
				slope               = -2.434e-5   # rads/counts  (2*pi/(2048*84*1.5))
				zero                =  0          # rads
				min                 = -1.0        # rads
				max                 =  3.1        # rads
				max_counts          =  1048575    # counts

			struct filtered_encoder
				#input	            = littledog.hr.knee_ry.enc
				#type                = 0           # 2-pole LPF
				cutoff              = 50          # Hz
				channel_path	    = 0 0 1
				enable              =  1
				slope               = -2.434e-5   # rads/counts  (2*pi/(2048*84*1.5))
				zero                =  0          # rads
				min                 = -1.0        # rads
				max                 =  3.1        # rads
				max_counts          =  1048575    # counts

			struct pwm                            # QUANTITIES MUST BE IN MOTOR COORDS
				enable              = 1           # bool
				channel             = 1           # unsigned 
				type                = 0
				null_bias           = 0           # Amp
				inv_torque_const    = -0.9786     # Amp/Nm
				back_emf_const      = -0.15       # Vs/rad
				armature_resistance = 3.38        # Ohms
				max_current         = 1.000       # Amp

		struct force_x
			struct hw
				type                =  6              #
				enable              =  1              #
				channel             =  7              #
				slope               =  -0.01457       # N/count
				zero                =  2298           # count
				min                 = -1000.0         # N
				max                 =  1000.0         # N
			struct filter
				input	            = littledog.hr.force_x.hw
				type                = 2          # 2 pole LPF
				cutoff              = 50         # Hz

		struct force_y
			struct hw
				type                =  3              #
				enable              =  1              #
				channel             =  3              #
				slope               =  -0.01457       # N/count
				zero                =  2275           # count
				min                 = -1000.0         # N
				max                 =  1000.0         # N 
			struct filter
				input	            = littledog.hr.force_y.hw
				type                = 2          # 2 pole LPF
				cutoff              = 50         # Hz

		struct force_z
			struct hw
				type                =  2              #
				enable              =  1              #
				channel             =  3              #
				slope               =  -0.006         # N/count
				zero                =  4142           # count
				min                 = -1000.0         # N
				max                 =  1000.0         # N
			struct filter
				input	            = littledog.hr.force_z.hw
				type                = 2          # 2 pole LPF
				cutoff              = 50         # Hz
struct calib

	k        =  15.0  15.0  13.5
	b        =   0.65  0.65  0.65

	struct stops
		fl = -0.59 -3.539 -2.821        # rad, position of stops
		fr =  0.59 -3.539 -2.821
		hl = -0.59  3.539  2.821
		hr =  0.59  3.539  2.821

	struct seek_direction
		fl = -0.6 -0.6 -0.3
		fr =  0.6 -0.6 -0.3
		hl = -0.6  0.6  0.3
		hr =  0.6  0.6  0.3

struct eye_leds
	struct left_red
		active_high	= 1
		state		= 1
		channel_path	= 0 0 0
	struct left_green
		active_high	= 1
		state		= 0
		channel_path	= 0 0 1
	struct right_red
		active_high 	= 1
		state		= 1
		channel_path	= 0 0 2
	struct right_green
		active_high	= 1
		state		= 0
		channel_path	= 0 0 3

# operating system fault info
struct os_info
	temp_mon_enable       = 0
	max_cpu_load_percent  = 100.0
	min_phys_mem_Mbytes   = 20.0
	server_name           = littledog_server

struct two_loop
	enable_timestats      = 0 # disable min/max/avg servo dt

#
# this structure is used by the LittleDog reader thread on the host
#
struct linux_comm_settings
	max_wait_for_first_frame  = 3.0  # peek() for first robot frame, disconnect    (sec.)
	max_wait_for_frame        = 0.02 # recv() skips if nothing arrives from robot  (sec.)
	max_failed_receive_count  = 50   # recv() fails this many in a row, disconnect (in packets)
	max_past_write_frames     = 300  # only hold this many unacknowleged msgs      (in packets)

#
# this structure is used by the LittleDog supervisor
#
struct qnx_comm_settings
	max_failed_receive_count  = 500  # recv() fails this many in a row, disconnect  (in packets)
	max_failed_connection_count = 5  # failed handshakes in a row, disconnect (at 1 hshake/sec.)
